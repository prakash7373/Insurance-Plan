<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="7" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-30T06:18:05Z" name="Default suite" finished-at="2021-03-30T06:20:35Z" duration-ms="149968">
    <groups>
    </groups>
    <test started-at="2021-03-30T06:18:05Z" name="Default test" finished-at="2021-03-30T06:20:35Z" duration-ms="149968">
      <class name="testCases.DisplayThreeLowestTravelPlans">
        <test-method signature="displayLowestTravelPlans(java.util.Hashtable)[pri:0, instance:testCases.DisplayThreeLowestTravelPlans@3d2ee678]" started-at="2021-03-30T06:18:06Z" name="displayLowestTravelPlans" data-provider="getThreeLowestTravelQuotes" finished-at="2021-03-30T06:18:34Z" duration-ms="28379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Traveller Mail ID=ramakrishna@gmail.com, Traveller Name=Mr. Sunny, Traveller Phone=9876543210, Country=Germany, Age 2=22, Age 1=21}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayLowestTravelPlans -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:testCases.DisplayThreeLowestTravelPlans@3d2ee678]" started-at="2021-03-30T06:18:34Z" name="flushReports" finished-at="2021-03-30T06:18:34Z" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method signature="displayLowestTravelPlans(java.util.Hashtable)[pri:0, instance:testCases.DisplayThreeLowestTravelPlans@3d2ee678]" started-at="2021-03-30T06:18:34Z" name="displayLowestTravelPlans" data-provider="getThreeLowestTravelQuotes" finished-at="2021-03-30T06:18:55Z" duration-ms="20598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Traveller Mail ID=sundarbently@gmail.com, Traveller Name=Mr. Sri hari, Traveller Phone=9879876565, Country=France, Age 2=21, Age 1=23}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayLowestTravelPlans -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:testCases.DisplayThreeLowestTravelPlans@3d2ee678]" started-at="2021-03-30T06:18:55Z" name="flushReports" finished-at="2021-03-30T06:18:55Z" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method signature="displayLowestTravelPlans(java.util.Hashtable)[pri:0, instance:testCases.DisplayThreeLowestTravelPlans@3d2ee678]" started-at="2021-03-30T06:18:55Z" name="displayLowestTravelPlans" data-provider="getThreeLowestTravelQuotes" finished-at="2021-03-30T06:19:17Z" duration-ms="22100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Traveller Mail ID=ramaganga@gmail.com, Traveller Name=Mr. policy man, Traveller Phone=9876543210, Country=Italy, Age 2=21, Age 1=21}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayLowestTravelPlans -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:testCases.DisplayThreeLowestTravelPlans@3d2ee678]" started-at="2021-03-30T06:19:17Z" name="flushReports" finished-at="2021-03-30T06:19:17Z" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- testCases.DisplayThreeLowestTravelPlans -->
      <class name="testCases.GetErrorInCarInsuranceForm">
        <test-method signature="getErrorForInvalidDetails(java.util.Hashtable)[pri:1, instance:testCases.GetErrorInCarInsuranceForm@66565121]" started-at="2021-03-30T06:19:17Z" name="getErrorForInvalidDetails" data-provider="getErrorDetailsTestData" finished-at="2021-03-30T06:19:40Z" duration-ms="22350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Owner Name=Rama Krishna, Owner Phone=9876543210, Fuel Variant=Petrol, RTO & City Name=MH01, Owner Email=ramakrish.com, Model Variant=2.4, Car Name=HONDA }]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getErrorForInvalidDetails -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:testCases.GetErrorInCarInsuranceForm@66565121]" started-at="2021-03-30T06:19:40Z" name="flushReports" finished-at="2021-03-30T06:19:40Z" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method signature="getErrorForInvalidDetails(java.util.Hashtable)[pri:1, instance:testCases.GetErrorInCarInsuranceForm@66565121]" started-at="2021-03-30T06:19:40Z" name="getErrorForInvalidDetails" data-provider="getErrorDetailsTestData" finished-at="2021-03-30T06:20:05Z" duration-ms="25245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Owner Name=Rama Raju, Owner Phone=98765, Fuel Variant=Petrol, RTO & City Name=MH02, Owner Email=ram@gmail.com, Model Variant=1.6, Car Name=HONDA }]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getErrorForInvalidDetails -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:testCases.GetErrorInCarInsuranceForm@66565121]" started-at="2021-03-30T06:20:05Z" name="flushReports" finished-at="2021-03-30T06:20:05Z" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method signature="getErrorForInvalidDetails(java.util.Hashtable)[pri:1, instance:testCases.GetErrorInCarInsuranceForm@66565121]" started-at="2021-03-30T06:20:05Z" name="getErrorForInvalidDetails" data-provider="getErrorDetailsTestData" finished-at="2021-03-30T06:20:25Z" duration-ms="19701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Owner Name=sri, Owner Phone=9876565432, Fuel Variant=Petrol, RTO & City Name=MH02, Owner Email=sun@/gmail.co, Model Variant=2.3, Car Name=HONDA}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getErrorForInvalidDetails -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:testCases.GetErrorInCarInsuranceForm@66565121]" started-at="2021-03-30T06:20:25Z" name="flushReports" finished-at="2021-03-30T06:20:25Z" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- testCases.GetErrorInCarInsuranceForm -->
      <class name="testCases.GetInsuranceNameList">
        <test-method signature="getInsuranceNameList()[pri:2, instance:testCases.GetInsuranceNameList@2fc6f97f]" started-at="2021-03-30T06:20:25Z" name="getInsuranceNameList" finished-at="2021-03-30T06:20:35Z" duration-ms="10005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInsuranceNameList -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:testCases.GetInsuranceNameList@2fc6f97f]" started-at="2021-03-30T06:20:35Z" name="flushReports" finished-at="2021-03-30T06:20:35Z" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- testCases.GetInsuranceNameList -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
